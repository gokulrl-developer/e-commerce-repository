
<style>
  .main {
    background-color: #111;
    color: #fff;
  }

  .sidebar {
    background-color: #333;
    height: 100vh;
    padding: 20px;
  }

  .sidebar a {
    text-decoration: none;
    color: #fff;
    margin: 10px 0;
    display: block;
  }

  .sidebar a:hover {
    color: #ffcc00;
  }

  .logo {
    font-size: 1.5rem;
    color: #fff;
    margin-bottom: 20px;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .form-container {
    background-color: #222;
    padding: 20px;
    border-radius: 8px;
  }

  .btn-custom {
    background-color: #ff9900;
    border: none;
  }

  .btn-custom:hover {
    background-color: #cc7a00;
  }
</style>
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet"/>
    <div class="container-fluid main">
  <div class="row">
    <!-- Sidebar -->
    <div class="col-md-2 sidebar d-flex flex-column">
      <a href="#">Dashboard</a>
      <a href="#">Products</a>
      <a href="#">Customers</a>
      <a href="#">Orders</a>
      <a href="#">Coupons</a>
      <a href="#">Category</a>
      <a href="#">Offers</a>
      <a href="#">Banner</a>
      <a href="#">Sales Report</a>
      <a href="#" class="text-danger">Logout</a>
    </div>

    <!-- Main Content -->
    <div class="col-md-10 p-4">
      <h3>Add Product</h3>
      <div class="form-container mt-4">
        <form id="productForm">
          <div class="row">
            <div class="col-md-6 mb-3">
              <label for="productName" class="form-label">Product Name</label>
              <input type="text" class="form-control" id="productName" placeholder="Enter product name"
                name="productName">
            </div>
            <div class="col-md-6 mb-3">
              <label for="stock" class="form-label">Stock</label>
              <input type="number" class="form-control" id="stock" placeholder="Enter stock quantity" name="stock">
            </div>
            <div class="col-md-6 mb-3">
              <label for="price" class="form-label">Price</label>
              <input type="number" class="form-control" id="price" placeholder="Enter price" name="price">
            </div>
            <div class="col-md-6 mb-3">
              <label for="category" class="form-label">Category</label>
              <input type="text" class="form-control" id="category" placeholder="Enter category" name="category">
            </div>
            <div class="col-md-6 mb-3">
              <label for="gender" class="form-label">Gender</label>
              <input type="text" class="form-control" id="gender" placeholder="Enter gender" name="gender">
            </div>
            <div class="col-md-6 mb-3">
              <label for="brand" class="form-label">Brand Name</label>
              <input type="text" class="form-control" id="brand" placeholder="Enter brand name" name="brand">
            </div>
            <div class="col-md-6 mb-3">
              <label for="description" class="form-label">Description</label>
              <textarea class="form-control" id="description" rows="3" placeholder="Enter description"
                name="description"></textarea>
            </div>
            <div class="col-md-6 mb-3">
              <label for="specifications" class="form-label">Specifications</label>
              <textarea class="form-control" id="specifications" rows="3" placeholder="Enter specifications"
                name="specifications"></textarea>
            </div>
            <div class="mb-3">
              <label for="imageFile" class="form-label text-muted">Image Files (up to 4)</label>
              <input type="file" id="imageFile" name="imageFiles" class="form-control bg-dark text-white border-secondary rounded-3" onchange="addImage()" >
              <div id="fileError" class="text-danger small mt-2 d-none">
                You can only upload up to 4 images.
              </div>
            </div>

            <div id="imagePreview" class="row row-cols-2 row-cols-md-4 g-4 mb-4">
              <!-- Preview images will appear here -->
            </div>

            <div id="loadingIndicator" class="d-none">
              <div class="d-flex justify-content-center align-items-center mb-4">
                <div class="spinner-border text-primary" role="status" style="width: 2rem; height: 2rem;">
                  <span class="visually-hidden">Uploading images...</span>
                </div>
                <span class="text-muted ms-2">Uploading images...</span>
              </div>
            </div>


            <div class="col-12">
              <button type="submit" class="btn btn-custom w-100">Add Product</button>
            </div>
          </div>
        </form>
      </div>
    </div>

    <!-- Crop Modal -->
    <div class="modal fade" id="cropModal" tabindex="-1" aria-labelledby="cropModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content bg-dark text-light">
          <div class="modal-header">
            <h5 class="modal-title" id="cropModalLabel">Crop Image</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="d-flex justify-content-center">
              <img id="cropImage" class="img-fluid" style="max-height: 500px; object-fit: contain;" />
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="button" class="btn btn-primary" onclick="applyCrop()">Crop & Save</button>
          </div>
        </div>
      </div>
    </div>


  </div>
</div>

 <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script>
  
let uploadedImages = [];
let cropper;
let selectedFile;


function addImage() {
    const imageFileInput = document.getElementById("imageFile");
    const fileError = document.getElementById("fileError");
    const imagePreview = document.getElementById("imagePreview");
    selectedFile = imageFileInput.files[0];
    
    // Reset file input
    imageFileInput.value = "";

    if (uploadedImages.length >= 4) {
        fileError.classList.remove("hidden");
        return;
    } else {
        fileError.classList.add("hidden");
    }

    // Show the crop modal
    openCropModal(selectedFile);
}

function openCropModal(file) {
    const cropModal = new bootstrap.Modal(document.getElementById("cropModal"));
    const cropImage = document.getElementById("cropImage");

    const reader = new FileReader();
    reader.onload = function (e) {
        cropImage.src = e.target.result;
        if (cropper) {
            cropper.destroy();
        }
        cropper = new Cropper(cropImage, {
            aspectRatio: 1,
            viewMode: 1,
            background: false,
            zoomable: true,
            scalable: false,
        });
    };
    reader.readAsDataURL(file);

    cropModal.show(); // Bootstrap modal method to display
}

function closeCropModal() {
    const cropModal = bootstrap.Modal.getInstance(document.getElementById("cropModal"));
    if (cropper) {
        cropper.destroy();
        cropper = null;
    }
    cropModal.hide();
}


function applyCrop() {
    if (cropper && uploadedImages.length < 4) {
        cropper
            .getCroppedCanvas({
                maxWidth: 1024,
                maxHeight: 1024,
                fillColor: "#fff",
            })
            .toBlob(
                (blob) => {
                    uploadedImages.push(blob);


                    const imgWrapper = document.createElement("div");
                    imgWrapper.className = "position-relative"; /*group*/


                    const imgElement = document.createElement("img");
                    imgElement.src = URL.createObjectURL(blob);
                    imgElement.className ="img-fluid w-100 ratio ratio-1x1 object-fit-cover rounded-3 border border-secondary";
                        


                    const deleteButton = document.createElement("button");
                    deleteButton.className =
                        "position-absolute top-0 end-0 bg-danger text-white rounded-circle w-25 h-25 d-flex align-items-center justify-content-center opacity-0 transition-opacity";
                    deleteButton.innerHTML = "Ã—";
                    deleteButton.onclick = (e) => {
                        e.preventDefault();
                        deleteImage(imgWrapper, blob);
                    };

                    imgWrapper.appendChild(imgElement);
                    imgWrapper.appendChild(deleteButton);
                    document.getElementById("imagePreview").appendChild(imgWrapper);
                },
                "image/jpeg",
                0.8
            );
    }
    closeCropModal();
}

function deleteImage(imgWrapper, blob) {
    imgWrapper.remove();
    uploadedImages = uploadedImages.filter((img) => img !== blob);
    document.getElementById("fileError").classList.add("hidden");
}



document
    .getElementById("productForm")
    .addEventListener("submit", async function (e) {
        e.preventDefault();


        const loadingIndicator = document.getElementById("loadingIndicator");
        loadingIndicator.classList.remove("hidden");

        const formData = new FormData();


        formData.append(
            "productName",
            document.getElementById("productName").value
        );
        formData.append("brand", document.getElementById("brand").value);
        formData.append("gender", document.getElementById("gender").value);
        formData.append("price", document.getElementById("price").value);
        formData.append("description", document.getElementById("description").value);
        formData.append("specifications", document.getElementById("specifications").value);
        formData.append("category", document.getElementById("category").value);


        uploadedImages.forEach((blob, index) => {
            formData.append("imageFiles", blob, `image_${index}.jpg`);
        });

        try {
            const response = await fetch("/admin/products/add", {
                method: "POST",
                body: formData,
            });

            const result = await response.json();

            if (response.ok) {
                window.location.href = `/admin/products/add/variant?productId=${result.productId}`;
            } else {
                throw new Error(result.error || "Error adding product");
            }
        } catch (error) {
            console.error("Error:", error);
            alert(error.message || "Error submitting form");
        } finally {
            loadingIndicator.classList.add("hidden");
        }

    });

</script>