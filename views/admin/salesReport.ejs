<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Orders</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body class="bg-gray-900 text-white">

    <!-- Header section -->
    <%-include('../partials/admin-header')%>
        <div class="flex">
            <!-- Sidebar -->
            <%-include('../partials/admin-sidebar')%>

                <!-- Main Content -->
                <main class="flex-grow p-6 md:w-4/5">
                    <div class="flex justify-between items-center mb-8">
                        <h1 class="text-2xl font-bold text-green-500">Sales Report</h1>
                        <div class="flex space-x-4">
                            <select id="dateRange" class="bg-[#111] text-white px-4 py-2 rounded-md">
                                <option value="day">Today</option>
                                <option value="week">This Week</option>
                                <option value="month">This Month</option>
                                <option value="year">This Year</option>
                                <option value="custom">Custom Range</option>
                            </select>
                            <input type="date" id="startDate" class="bg-[#111] text-white px-4 py-2 rounded-md hidden">
                            <input type="date" id="endDate" class="bg-[#111] text-white px-4 py-2 rounded-md hidden">
                            <button id="generateReport"
                                class="bg-yellow-500 hover:bg-yellow-600 text-black font-semibold px-4 py-2 rounded-md">Generate
                                Report</button>
                        </div>
                    </div>

                    <!-- Summary Cards -->
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4 mb-8">
                        <div class="bg-[#111] p-4 rounded-lg">
                            <h3 class="text-lg font-bold text-green-500">Total Sales</h3>
                            <p class="text-2xl font-bold" id="totalSales"><span class="text-red-500 font-bold">₹</span>
                                <%= summary.totalSales.toFixed(2) %>
                            </p>
                        </div>
                        <div class="bg-[#111] p-4 rounded-lg">
                            <h3 class="text-lg font-bold text-green-500">Total Orders</h3>
                            <p class="text-2xl font-bold" id="totalOrders">
                                <%= summary.totalOrders %>
                            </p>
                        </div>
                        <div class="bg-[#111] p-4 rounded-lg">
                            <h3 class="text-lg font-bold text-green-500">Total Discount</h3>
                            <p class="text-2xl font-bold" id="totalDiscount">₹<%= summary.totalDiscount.toFixed(2) %>
                            </p>
                        </div>
                        <div class="bg-[#111] p-4 rounded-lg">
                            <h3 class="text-lg font-bold text-green-500">Total Coupon</h3>
                            <p class="text-2xl font-bold" id="totalCouponDiscount">₹<%=
                                    summary.totalCouponDiscount.toFixed(2) %>
                            </p>
                        </div>
                        <div class="bg-[#111] p-4 rounded-lg">
                            <h3 class="text-lg font-bols text-green-500">Net Amount</h3>
                            <p class="text-2xl font-bold" id="netAmount">₹<%= summary.netAmount.toFixed(2) %>
                            </p>
                        </div>
                    </div>
                    <!-- Download Buttons -->
                    <div class="flex justify-end space-x-4 mb-8">
                        <button id="downloadPDF"
                            class="bg-green-500 hover:bg-green-600 text-black font-semibold px-4 py-2 rounded-md">Download
                            PDF</button>
                        <button id="downloadExcel"
                            class="bg-green-500 hover:bg-green-600 text-black  font-semibold px-4 py-2 rounded-md">Download
                            Excel</button>
                    </div>
                    <!-- Sales Table -->
                    <div class="bg-gray-700 text-green-500 rounded p-4">
                        <table class="w-full border-collapse table-fixed">
                            <thead>
                                <tr class="text-left border-b">
                                    <th class="p-2">Date</th>
                                    <th class="p-2">Order:Id</th>
                                    <th class="p-2"> Customer<br>Name</th>
                                    <th class="p-2">Total<br>Amount</th>
                                    <th class="p-2">Discount</th>
                                    <th class="p-2">Coupon<br>Discount</th>
                                    <th class="p-2">Net<br>Amount</th>
                                    <th class="p-2">Payment<br>Method</th>
                                    <th class="p-2">Payment<br>Status</th>
                                </tr>
                            </thead>
                            <tbody id="salesTableBody">
                                <% salesData.forEach(day=> { %>
                                    <% day.orders.forEach(order=> { %>
                                        <tr class="border-b border-gray-800 text-white">
                                            <td class="p-4">
                                                <%= day._id %>
                                            </td>
                                            <td class="p-4">#<%= order.orderId.toString().slice(-6) %>
                                            </td>
                                            <td class="p-4">
                                                <%= order.customerName %>
                                            </td>
                                            <td class="p-4">₹<%= order.totalAmount.toFixed(2) %>
                                            </td>
                                            <td class="p-4">₹<%= order.discount.toFixed(2) %>
                                            </td>
                                            <td class="p-4">₹<%= order.couponDiscount.toFixed(2) %>
                                            </td>
                                            <td class="p-4">₹<%= (order.totalAmount - order.discount).toFixed(2) %>
                                            </td>
                                            <td class="p-4">
                                                <%= order.paymentMethod %>
                                            </td>
                                            <td class="p-4">
                                                <%= order.paymentStatus %>
                                            </td>
                                        </tr>
                                        <% }); %>
                                            <% }); %>
                            </tbody>
                        </table>
                    </div>

                    <!-- Pagination -->
                    <div class="mt-8 flex justify-between items-center">
                        <div>
                            <span id="paginationInfo" class="text-sm text-gray-400"></span>
                        </div>
                        <div class="space-x-2">
                            <button id="prevPage"
                                class="bg-orange-500 hover:bg-orange-600 text-black font-semibold px-4 py-2 rounded-md disabled:opacity-50 disabled:cursor-not-allowed">Previous</button>
                            <button id="nextPage"
                                class="bg-orange-500 hover:bg-orange-600 text-black font-semibold px-4 py-2 rounded-md disabled:opacity-50 disabled:cursor-not-allowed">Next</button>
                        </div>
                    </div>
                </main>
        </div>

        </div>

        <!-- Footer Section -->
        <%-include('../partials/admin-footer')%>

</body>

</html>
<script>
    // Utility Functions
    const qs = (selector) => document.querySelector(selector);
    const qsa = (selector) => document.querySelectorAll(selector);

    // Chart initialization
    // let salesChart;

    // Pagination variables
    let currentPage = 1;
    let totalPages = 1;

    // Generate Report
    async function generateReport() {
        const dateRange = qs("#dateRange").value;
        let startDate = qs("#startDate").value;
        let endDate = qs("#endDate").value;

        let url = `/admin/sales-report/data?range=${dateRange}&page=${currentPage}`;
        if (dateRange === 'custom') {
            url += `&startDate=${startDate}&endDate=${endDate}`;
        }

        try {
            const response = await fetch(url);
            const data = await response.json();

            if (response.ok) {
                updateSummary(data.summary);
                updateSalesTable(data.salesData);
                // updateSalesChart(data.salesData);
                updatePagination(data.pagination);
            } else {
                Swal.fire('Error', data.message || 'Failed to generate report', 'error');
            }
        } catch (error) {
            console.error("Error generating report:", error);
            Swal.fire('Error', 'An error occurred while generating the report', 'error');
        }
    }

    // Update Summary
    function updateSummary(summary) {
        qs("#totalSales").textContent = `₹${summary.totalSales.toFixed(2)}`;
        qs("#totalOrders").textContent = summary.totalOrders;
        qs("#totalDiscount").textContent = `₹${summary.totalDiscount.toFixed(2)}`;
        qs("#totalCouponDiscount").textContent = `₹${summary.totalCouponDiscount.toFixed(2)}`;
        qs("#netAmount").textContent = `₹${summary.netAmount.toFixed(2)}`;
    }

    // Update Sales Table
    function updateSalesTable(salesData) {
        const tableBody = qs("#salesTableBody");
        tableBody.innerHTML = salesData.flatMap(day =>
            day.orders.map(order => `
                <tr class="border-b border-gray-800">
                    <td class="p-4">${day._id}</td>
                    <td class="p-4">#${order.orderId.toString().slice(-6)}</td>
                    <td class="p-4">${order.customerName}</td>
                    <td class="p-4">₹${order.totalAmount.toFixed(2)}</td>
                    <td class="p-4">₹${order.discount.toFixed(2)}</td>
                    <td class="p-4">₹${order.couponDiscount.toFixed(2)}</td>
                    <td class="p-4">₹${(order.totalAmount - order.discount).toFixed(2)}</td>
                    <td class="p-4">${order.paymentMethod}</td>
                    <td class="p-4">${order.paymentStatus}</td>
                </tr>
            `
            )).join('');
    }


    function updatePagination(pagination) {
        currentPage = pagination.currentPage;
        totalPages = pagination.totalPages;
        qs("#paginationInfo").textContent = `Page ${currentPage} of ${totalPages}`;
        qs("#prevPage").disabled = currentPage === 1;
        qs("#nextPage").disabled = currentPage === totalPages;
    }

    // Event Listeners
    qs("#dateRange").addEventListener("change", function () {
        const customDateInputs = qsa("#startDate, #endDate");
        customDateInputs.forEach(input => {
            input.classList.toggle("hidden", this.value !== "custom");
        });
    });

    qs("#generateReport").addEventListener("click", generateReport);

    qs("#prevPage").addEventListener("click", () => {
        if (currentPage > 1) {
            currentPage--;
            generateReport();
        }
    });

    qs("#nextPage").addEventListener("click", () => {
        if (currentPage < totalPages) {
            currentPage++;
            generateReport();
        }
    });

    qs("#downloadPDF").addEventListener("click", async function () {
        const dateRange = qs("#dateRange").value;
        let startDate = qs("#startDate").value;
        let endDate = qs("#endDate").value;

        let url = `/admin/sales-report/download/pdf?range=${dateRange}`;
        if (dateRange === 'custom') {
            url += `&startDate=${startDate}&endDate=${endDate}`;
        }

        window.open(url, '_blank');
    });

    qs("#downloadExcel").addEventListener("click", async function () {
        const dateRange = qs("#dateRange").value;
        let startDate = qs("#startDate").value;
        let endDate = qs("#endDate").value;

        let url = `/admin/sales-report/download/excel?range=${dateRange}`;
        if (dateRange === 'custom') {
            url += `&startDate=${startDate}&endDate=${endDate}`;
        }

        window.open(url, '_blank');
    });

    // Initialize report on page load
    document.addEventListener("DOMContentLoaded", generateReport);
</script>