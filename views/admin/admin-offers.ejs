<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Offers</title>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link rel="stylesheet" href="/style.css">
</head>

<body class="bg-gray-900 text-white">

  <!-- Header section -->
  <%-include('../partials/admin-header')%>
    <div class="flex">
      <!-- Sidebar -->
      <%-include('../partials/admin-sidebar')%>

        <!-- Main Content -->
        <main class="flex-grow p-6">
          <div class="flex justify-between items-center mb-4">
            <h4 class="text-xl font-semibold">Offers</h4>
            <div class="relative">
              <input id="search-input"
                class="w-64 bg-[#111] border-none text-white placeholder-gray-500 px-4 py-2 rounded-md focus:outline-none focus:ring-2 focus:ring-orange-500"
                placeholder="Search for offers" />
            </div>
          </div>

          <div class="bg-gray-700 text-white rounded p-4">
            <table class="w-full border-collapse">
              <thead>
                <tr class="text-left border-b">
                  <th class="p-2">Sl.No</th>
                  <th class="p-2">Title</th>
                  <th class="p-2">Percentage</th>
                  <th class="p-2">Type &<br>Applicable Items</th>
                  <th class="p-2">Start Date &<br>Expiry Date</th>
                  <th class="p-2">Active/<br>Inactive</th>
                  <th class="p-2">Actions</th>
                </tr>
              </thead>
              <tbody>
                <%if(offers.length===0){%>
                    <div>No offers to show</div>                   
                <% }else{offers.forEach((offer, index)=> { %>
                  <tr class="hover:bg-gray-600">
                    <td class="p-2">
                      <%= index + 1 %>
                    </td>
                    <td class="p-2">
                      <%= offer.title %>
                    </td>
                    <td class="p-2">
                      <%= offer.discountPercentage %>
                    </td>
                    <td class="p-2">
                      <%= offer.offerType %><br>
                      <%=offer.offerType==="Product"?offer.applicableProduct.productName:offer.applicableCategory.categoryName%>
                    </td>
                    <td class="p-2">
                        <%= offer.startDate.toLocaleDateString('en-GB') %><br>
                        <%=offer.expiryDate.toLocaleDateString('en-GB')%>
                      </td>
                      <td class="p-2">
                        <%=offer.isActive===true?'Active':'Inactive'%>
                      </td>
                    <td class="p-2">
                      <button class="bg-green-500 text-white py-1 px-2 rounded hover:bg-green-600"
                        onclick="openEditOfferModal('<%= JSON.stringify(offer)%>')">
                        Edit
                      </button>
                      <button class="bg-red-500 text-white py-1 px-2 rounded hover:bg-red-600"
                        onclick="deleteOffer('<%= offer._id %>')">
                        Delete
                      </button>
                    </td>
                  </tr>
                  <% })} %>
              </tbody>
            </table>
            <div class="mt-4 flex justify-end">
              <button class="bg-orange-500 text-white py-2 px-4 rounded hover:bg-orange-600"
                onclick="openAddOfferModal()">
                Add New Offer
              </button>
            </div>
          </div>
        </main>
    </div>

    <!-- Pagination -->
    <div class="mt-4 flex justify-center">
      <nav class="inline-flex">
        <% if (currentPage> 1) { %>
          <a href="/admin/offers?page=<%= currentPage - 1 %>"
            class="bg-[#222] text-white px-3 py-1 mx-1 rounded-md hover:bg-orange-500">Previous</a>
          <% } %>
            <% for (let i=1; i <=totalPages; i++) { %>
              <a href="/admin/offers?page=<%= i %>"
                class="<%= currentPage === i ? 'bg-orange-500' : 'bg-[#222]' %> text-white px-3 py-1 mx-1 rounded-md hover:bg-orange-500">
                <%= i %>
              </a>
              <% } %>
                <% if (currentPage < totalPages) { %>
                  <a href="/admin/offers?page=<%= currentPage + 1 %>"
                    class="bg-[#222] text-white px-3 py-1 mx-1 rounded-md hover:bg-orange-500">Next</a>
                  <% } %>
      </nav>
    </div>
    <!-- Modals -->
    <!-- Add Offer Modal -->
    <div id="add-offer-modal" class="hidden fixed z-10 inset-0 flex items-center justify-center bg-black/50 ">
      <div class="bg-black p-6 rounded shadow-lg w-auto relative">
        <!-- Close Button -->
        <button
          class="absolute top-2 right-2 text-gray-600 hover:text-gray-900 text-2xl font-bold w-8 h-8 flex items-center justify-center"
          onclick="closeAddOfferModal()">
          &times;
        </button>
        <h2 class="text-lg font-bold mb-4">Add Offer</h2>
        <form id="add-offer-form" class="text-blue-500" action="/admin/offers/add/" method="POST">
          <div class="grid grid-cols-2 gap-4">
          <div class="mb-4">
            <label for="offer-title" class="block text-sm font-medium">Offer Title</label>
            <input type="text" id="offer-title" name="title" placeholder="Enter offer title"
              class="border p-2 w-full rounded">
              <div data-error-id="title" class="text-red font-medium "></div>
          </div>
          <div class="mb-4">
            <label for="add-offer-type" class="block text-sm font-medium">Offer Type</label>
            <select name="offerType" id="add-offer-type" class="border p-2 w-full rounded text-black" onchange="updateApplicableItems()">
              <option value="" disabled selected>Select Type</option>
              <option value="Product">Product Offer</option>
              <option value="Category">Category Offer</option>
            </select>
            <div data-error-id="type" class="text-red font-medium "></div>
          </div>
          <div class="mb-4">
            <label for="add-applicable-item" class="block text-sm font-medium">Applicable Items</label>
            <select name="applicableItem" id="add-applicable-item" class="border p-2 w-full rounded text-black">
            </select>
            <div data-error-id="items" class="text-red font-medium "></div>
          </div>
          <div class="mb-4">
            <label for="add-discount-percentage" class="block text-sm font-medium">Discount Percentage</label>
            <input type="number" id="add-discount-percentage" name="discountPercentage" placeholder="Enter discount percentage"
              class="border p-2 w-full rounded">
              <div data-error-id="discount" class="text-red font-medium "></div>
          </div>
          <div class="mb-4">
            <label for="add-start-date" class="block text-sm font-medium">Start Date</label>
            <input type="date" id="add-start-date" name="startDate" 
              class="border p-2 w-full rounded">
              <div data-error-id="start-date" class="text-red font-medium "></div>
          </div>
          <div class="mb-4">
            <label for="add-expiry-date" class="block text-sm font-medium">Expiry Date</label>
            <input type="date" id="add-expiry-date" name="expiryDate" 
              class="border p-2 w-full rounded">
              <div data-error-id="expiry-date" class="text-red font-medium "></div>
          </div>
          <div class="mb-4 flex items-center">
            <label for="add-is-active" class="block text-sm font-medium">Active/Inactive</label>
            <select id="add-is-active" name="isActive" 
              class="border p-2 w-full rounded">
              <option value=""selected disabled>Select status</option>
              <option value="true">Active</option>
              <option value="false">Inactive</option>
              </select>
              <div data-error-id="status" class="text-red font-medium "></div>
          </div>
          <div class="text-right">
            <button type="submit" class="bg-green-500 text-white py-2 px-4 rounded hover:bg-green-600">Add
              Offer</button>
          </div>
          </div>
        </form>
      </div>
    </div>


  <!-- Edit Offer Modal -->
<div id="edit-offer-modal" class="hidden fixed z-10 inset-0 flex items-center justify-center bg-black/50">
  <div class="bg-black p-6 rounded shadow-lg w-auto relative max-h-full max-w-full ">
    <!-- Close Button -->
    <button class="absolute top-2 right-2 text-gray-600 hover:text-gray-900 text-2xl font-bold w-8 h-8 flex items-center justify-center" onclick="closeEditOfferModal()">
      &times;
    </button>
    <h2 class="text-lg font-bold mb-4">Edit Offer</h2>
    <form id="edit-offer-form" class="text-blue-500 grid grid-cols-2 gap-4">
      <input type="text" id="edit-offer-id" name="editOfferId" class="hidden">
      
      <div class="mb-4">
        <label for="edit-offer-title" class="block text-sm font-medium">Offer Title</label>
        <input type="text" id="edit-title" name="title" placeholder="Enter offer title" class="border p-2 w-full rounded">
        <div data-error-id="title" class="text-red font-medium"></div>
      </div>
      
      <div class="mb-4">
        <label for="edit-offer-type" class="block text-sm font-medium">Offer Type</label>
        <select name="offerType" id="edit-offer-type" class="border p-2 w-full rounded text-black" onchange="updateApplicableItems('edit')">
          <option value="" disabled selected>Select Type</option>
          <option value="Product">Product Offer</option>
          <option value="Category">Category Offer</option>
        </select>
        <div data-error-id="type" class="text-red font-medium"></div>
      </div>
      
      <div class="mb-4">
        <label for="edit-applicable-item" class="block text-sm font-medium">Applicable Items</label>
        <select name="applicableItem" id="edit-applicable-item" class="border p-2 w-full rounded text-black">
        </select>
        <div data-error-id="items" class="text-red font-medium"></div>
      </div>

      <div class="mb-4">
        <label for="edit-discount-percentage" class="block text-sm font-medium">Discount Percentage</label>
        <input type="number" id="edit-discount" name="discountPercentage" placeholder="Enter discount percentage" class="border p-2 w-full rounded">
        <div data-error-id="discount" class="text-red font-medium"></div>
      </div>

      <div class="mb-4">
        <label for="edit-start-date" class="block text-sm font-medium">Start Date</label>
        <input type="date" id="edit-start-date" name="startDate" class="border p-2 w-full rounded">
        <div data-error-id="start-date" class="text-red font-medium"></div>
      </div>

      <div class="mb-4">
        <label for="edit-expiry-date" class="block text-sm font-medium">Expiry Date</label>
        <input type="date" id="edit-expiry-date" name="expiryDate" class="border p-2 w-full rounded">
        <div data-error-id="expiry-date" class="text-red font-medium"></div>
      </div>

      <div class="mb-4 flex items-center">
        <label for="edit-is-active" class="block text-sm font-medium">Active/Inactive</label>
        <select id="edit-is-active" name="isActive" placeholder="Enter offer title" class="border p-2 w-full rounded">
          <option value="" disabled selected>Select status</option>
          <option value="true">Active</option>
          <option value="false">Inactive</option>
        </select>
        <div data-error-id="status" class="text-red font-medium"></div>
      </div>

      <div class="text-right col-span-2">
        <button type="submit" class="bg-green-500 text-white py-2 px-4 rounded hover:bg-green-600">Edit Offer</button>
      </div>
    </form>
  </div>
</div>

    <!-- Footer Section -->
    <%-include('../partials/admin-footer')%>

</body>

</html>

<script>
  const products = <%- JSON.stringify(products) %>;
  const categories = <%- JSON.stringify(categories) %>;
  function openAddOfferModal() {
      document.getElementById('add-offer-modal').classList.remove('hidden');
  }

  function closeAddOfferModal() {
      document.getElementById('add-offer-modal').classList.add('hidden');
  }

  document.getElementById('add-offer-type').addEventListener('select',()=>{
 const offerType=document.getElementById('add-offer-type').value;
 updateApplicableItems('add');
  }
)
 
function openEditOfferModal(offerData) {
      const offer = JSON.parse(offerData);
      document.getElementById('edit-offer-id').value = offer._id;
      document.getElementById('edit-title').value = offer.title;
      document.getElementById('edit-applicable-item').value = offer.applicableItem;
      document.getElementById('edit-discount').value = offer.discountPercentage;
      document.getElementById('edit-offer-type').value = offer.offerType;
      document.getElementById('edit-start-date').value = new Date(offer.startDate).toISOString().split('T')[0];
      document.getElementById('edit-expiry-date').value = new Date(offer.expiryDate).toISOString().split('T')[0];
      document.getElementById('edit-is-active').value = offer.isActive;
      updateApplicableItems('edit', offer.offerType === 'Product' ? offer.applicableProduct._id : offer.applicableCategory._id);
      document.getElementById('edit-offer-modal').classList.remove('hidden');
  }

  function closeEditOfferModal() {
      document.getElementById('edit-offer-modal').classList.add('hidden');
  }

  function updateApplicableItems(mode = 'add', selectedItemId = null) {
      const offerType = mode === 'add' ? document.querySelector('#add-offer-form [name="offerType"]').value : document.querySelector('#edit-offer-form [name="offerType"]').value;
      const applicableItemSelect = mode === 'add' ? document.querySelector('#add-offer-form [name="applicableItem"]') : document.querySelector('#edit-offer-form [name="applicableItem"]');
      applicableItemSelect.innerHTML = '<option value="">Select Item</option>';
      
      if (offerType === 'Product') {
          products.forEach(product => {
              const option = document.createElement('option');
              option.value = product._id;
              option.textContent = product.productName;
              if (selectedItemId && product._id === selectedItemId) {
                  option.selected = true;
              }
              applicableItemSelect.appendChild(option);
          });
      } else if (offerType === 'Category') {
          categories.forEach(category => {
              const option = document.createElement('option');
              option.value = category._id;
              option.textContent = category.categoryName;
              if (selectedItemId && category._id === selectedItemId) {
                  option.selected = true;
              }
              applicableItemSelect.appendChild(option);
          });
      }
  }

/* function activateValidation(mode){
if(mode==='add'){
  const selectedForm=document.getElementById('add-offer-form');
}else{
  const selectedForm=document.getElementById('edit-offer-form');
}
selectedForm.querySelector("[data-error-id='title']").addEventListener('input',()={
  selectedForm.querySelector("[data-error-id='title']").remove('hidden');

});
selectedForm.querySelector("[data-error-id='type']").addEventListener('input',()={
  selectedForm.querySelector("[data-error-id='type']").remove('hidden');
  
});
selectedForm.querySelector("[data-error-id='items']").addEventListener('input',()={
  selectedForm.querySelector("[data-error-id='items']").remove('hidden');
  
});
selectedForm.querySelector("[data-error-id='start-date']").addEventListener('input',()={
  selectedForm.querySelector("[data-error-id='start-date']").remove('hidden');
  
});
selectedForm.querySelector("[data-error-id='expiry-date']").addEventListener('input',()={
  selectedForm.querySelector("[data-error-id='expiry-date']").remove('hidden');
  
});
selectedForm.querySelector("[data-error-id='status']").addEventListener('input',()={
  selectedForm.querySelector("[data-error-id='status']").remove('hidden');
  
});

}
 */



 //------------------helper function to validate-------------------------------------------
const validateOffer = (formData,mode) => {
  const title = formData.get('title').trim();
      const discountPercentage = formData.get('discountPercentage');
      const offerType = formData.get('offerType');
      const applicableItem = formData.get('applicableItem');
      const startDate = new Date(formData.get('startDate'));
      const expiryDate = new Date(formData.get('expiryDate'));

    const errors = [];
    if (!title || typeof title !== 'string' || title.trim() === '' || title.trim().length>50) {
        errors.push('offer title cannot be empty and must be a string of length less than 50.');
    }
    if (!discountPercentage || isNaN(parseFloat(discountPercentage)) || discountPercentage < 0 || discountPercentage > 100) {
        errors.push('Discount percentage is required and should be a number between 0 and 100');
    }
    if (!offerType || !['Product', 'Category'].includes(offerType)) {
        errors.push('OfferType is required and should be of categories Product or Category')
    }
    if (!applicableItem) {
        errors.push('applicableItem is required');
    }
    
    if (!startDate) {
        errors.push('startDate is required');
    } else if (!(startDate instanceof Date) || isNaN(startDate.getTime())) {
        errors.push('start Date should be a date');
    };
    if (!expiryDate) {
        errors.push('Expiry Date is required');
    } else if (!(expiryDate instanceof Date) || isNaN(expiryDate.getTime())) {
        errors.push('Expiry Date should be a date');
    };
    if (startDate.getTime() > expiryDate.getTime()) {
        errors.push('Expiry Date cannot be before StartDate');
    }
    return errors;
}


  document.getElementById('add-offer-form').addEventListener('submit', async function (e) {
      e.preventDefault();
      const formData = new FormData(this);

      const validationErrors = validateOffer(formData,"ADD");
    if(validationErrors.length>0){
      let errorText=validationErrors.join("<br>");
      Swal.fire({title:"Error",html:errorText,icon:"error"});
      return;
    }

      const jsonData = Object.fromEntries(formData.entries());
            try {
          const response = await fetch('/admin/offers/add/', {
              method: 'POST',
              headers: {
                  'Content-Type': 'application/json',
              },
              body: JSON.stringify(jsonData),
          });
          const result = await response.json();

          if (response.ok) {
              Swal.fire({
                  icon: 'success',
                  title: 'Success',
                  text: result.message,
              }).then(() => {
                  location.reload();
              });
          } else {
              Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: result.message,
              });
          }
      } catch (error) {
          console.error('Error:', error);
          Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'An unexpected error occurred. Please try again.',
          });
      }
  });

  document.getElementById('edit-offer-form').addEventListener('submit', async function (e) {
      e.preventDefault();
      const formData = new FormData(this);

      const validationErrors = validateOffer(formData,"EDIT");
    if(validationErrors.length>0){
      let errorText=validationErrors.join("<br>");
      Swal.fire({title:"Error",html:errorText,icon:"error"});
      return;
    }
      const jsonData = Object.fromEntries(formData.entries());
      console.log(jsonData)
      const id=document.getElementById('edit-offer-id').value;
      try {
          const response = await fetch(`/admin/offers/edit/${id}`, {
              method: 'PUT',
              headers: {
                  'Content-Type': 'application/json',
              },
              body: JSON.stringify(jsonData),
          });
          const result = await response.json();

          if (response.ok) {
              Swal.fire({
                  icon: 'success',
                  title: 'Success',
                  text: result.message,
              }).then(() => {
                  location.reload();
              });
          } else {
              Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: result.message,
              });
          }
      } catch (error) {
          console.error('Error:', error);
          Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'An unexpected error occurred. Please try again.',
          });
      }
  });

  async function deleteOffer(offerId) {
      const result = await Swal.fire({
          title: 'Are you sure?',
          text: "You won't be able to revert this!",
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#f97316',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, delete it!'
      });

      if (result.isConfirmed) {
          try {
              const response = await fetch(`/admin/offers/delete/${offerId}`, {
                  method: 'DELETE',
              });
              const result = await response.json();

              if (response.ok) {
                  Swal.fire(
                      'Deleted!',
                      result.message,
                      'success'
                  ).then(() => {
                      location.reload();
                  });
              } else {
                  Swal.fire(
                      'Error!',
                      result.message,
                      'error'
                  );
              }
          } catch (error) {
              console.error('Error:', error);
              Swal.fire(
                  'Error!',
                  'An unexpected error occurred.',
                  'error'
              );
          }
      }
  }

  // Search functionality
  document.getElementById('search-input').addEventListener('input', function(e) {
      const searchTerm = e.target.value.toLowerCase();
      const rows = document.querySelectorAll('#offersTableBody tr');

      rows.forEach(row => {
          const title = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
          const type = row.querySelector('td:nth-child(4)').textContent.toLowerCase();
          const applicableItem = row.querySelector('td:nth-child(5)').textContent.toLowerCase();

          if (title.includes(searchTerm) || type.includes(searchTerm) || applicableItem.includes(searchTerm)) {
              row.style.display = '';
          } else {
              row.style.display = 'none';
          }
      });
  });
</script>