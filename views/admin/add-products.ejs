<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Add Product</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet" />
</head>

<body class="bg-gray-900 text-white">
    <!-- Header partial -->
    <%-include('../partials/admin-header') %>
    <div class="flex">
 <%- include('../partials/admin-sidebar') %>

     <!-- Main Content -->
     <div class="w-4/5 p-6">
        <h3 class="text-2xl font-semibold">Add Product</h3>
        <div class="bg-gray-800 rounded-lg p-6 mt-6">
          <form id="productForm" class="space-y-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label for="productName" class="block text-sm font-medium">Product Name</label>
                <input type="text" id="productName" name="productName" placeholder="Enter product name"
                  class="w-full bg-gray-700 text-white border border-gray-600 rounded p-2">
              </div>
              <div>
                <label for="stock" class="block text-sm font-medium">Stock</label>
                <input type="number" id="stock" name="stock" placeholder="Enter stock quantity"
                  class="w-full bg-gray-700 text-white border border-gray-600 rounded p-2">
              </div>
              <div>
                <label for="price" class="block text-sm font-medium">Price</label>
                <input type="number" id="price" name="price" placeholder="Enter price"
                  class="w-full bg-gray-700 text-white border border-gray-600 rounded p-2">
              </div>
              <div>
                <label for="category" class="block text-sm font-medium">Category</label>
                <select id="category" name="category"
                  class="w-full bg-gray-700 text-white border border-gray-600 rounded p-2">
                  <option value="">Add Category</option>
                  <% categories.forEach(category => { %>
                    <option value="<%= category._id %>"><%= category.categoryName %></option>
                  <% }) %>
                </select>
              </div>
              <div>
                <label for="gender" class="block text-sm font-medium">Gender</label>
                <select id="gender" name="gender" class="w-full bg-gray-700 text-white border border-gray-600 rounded p-2">
                  <option value="Unisex">Unisex</option>
                  <option value="Men">Men</option>
                  <option value="Women">Women</option>
                </select>
              </div>
              <div>
                <label for="brand" class="block text-sm font-medium">Brand Name</label>
                <input type="text" id="brand" name="brand" placeholder="Enter brand name"
                  class="w-full bg-gray-700 text-white border border-gray-600 rounded p-2">
              </div>
              <div>
                <label for="discount" class="block text-sm font-medium">Discount Percentage</label>
                <input type="number" id="discount" name="discount" placeholder="Enter discount percentage"
                  class="w-full bg-gray-700 text-white border border-gray-600 rounded p-2" step="0.01">
              </div>
              <div>
                <label for="rating" class="block text-sm font-medium">Rating</label>
                <input type="number" id="rating" name="rating" placeholder="Enter rating"
                  class="w-full bg-gray-700 text-white border border-gray-600 rounded p-2" step="0.1" min="0" max="5">
              </div>
              <div>
                <label for="description" class="block text-sm font-medium">Description</label>
                <textarea id="description" name="description" rows="3" placeholder="Enter description"
                  class="w-full bg-gray-700 text-white border border-gray-600 rounded p-2"></textarea>
              </div>
              <div>
                <label for="specifications" class="block text-sm font-medium">Specifications</label>
                <textarea id="specifications" name="specifications" rows="3" placeholder="Enter specifications"
                  class="w-full bg-gray-700 text-white border border-gray-600 rounded p-2"></textarea>
              </div>
              <div>
                <label for="imageFile" class="block text-sm font-medium">Image Files (up to 4)</label>
                <input type="file" id="imageFile" name="imageFiles"
                  class="w-full bg-gray-700 text-white border border-gray-600 rounded p-2" onchange="addImage()">
                <div id="fileError" class="hidden text-red-500 text-sm mt-2">
                  You can only upload up to 4 images.
                </div>
              </div>
            </div>
  
            <div id="imagePreview" class="grid grid-cols-2 md:grid-cols-4 gap-4 mt-4">
              <!-- Preview images will appear here -->
            </div>
  
            <div id="loadingIndicator" class="hidden mt-4 flex items-center gap-2">
              <div class="spinner-border animate-spin inline-block w-8 h-8 border-4 border-gray-600 border-t-blue-500 rounded-full"></div>
              <span class="text-gray-400">Uploading images...</span>
            </div>
  
            <button type="submit"
              class="w-full bg-orange-500 hover:bg-orange-600 text-white font-semibold rounded p-2">Add Product</button>
          </form>
        </div>
      </div>
    </div>
 <!-- footer section -->
  <%- include('../partials/admin-footer')%>
  <!-- Crop Modal -->
  <div id="cropModal" class="fixed inset-0 bg-black bg-opacity-75 flex justify-center items-center hidden">
    <div class="bg-gray-800 rounded-lg overflow-hidden w-3/4 max-w-3xl">
      <div class="p-4 flex justify-between items-center border-b border-gray-700">
        <h3 class="text-lg font-semibold">Crop Image</h3>
        <button onclick="closeCropModal()" class="text-gray-400 hover:text-white">&times;</button>
      </div>
      <div class="p-4">
        <img id="cropImage" class="max-h-96 mx-auto" />
      </div>
      <div class="p-4 flex justify-end gap-4">
        <button onclick="closeCropModal()" class="bg-gray-600 hover:bg-gray-700 text-white rounded p-2">Cancel</button>
        <button onclick="applyCrop()" class="bg-blue-500 hover:bg-blue-600 text-white rounded p-2">Crop & Save</button>
      </div>
    </div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
  <script src="/js/product-form.js"></script>
</body>

</html>

<script>
  
    let uploadedImages = [];
    let cropper;
    let selectedFile;    
    function addImage() {
        const imageFileInput = document.getElementById("imageFile");
        const fileError = document.getElementById("fileError");
        const imagePreview = document.getElementById("imagePreview");
        selectedFile = imageFileInput.files[0];
        
        // Reset file input
        imageFileInput.value = "";
    
        if (uploadedImages.length >= 4) {
            fileError.classList.remove("hidden");
            return;
        } else {
            fileError.classList.add("hidden");
        }
    
        // Show the crop modal
        openCropModal(selectedFile);
    }
    
    function openCropModal(file) {
       
        document.getElementById("cropModal").classList.remove("hidden");
        const cropImage = document.getElementById("cropImage");
    
        const reader = new FileReader();
        reader.onload = function (e) {
            cropImage.src = e.target.result;
            if (cropper) {
                cropper.destroy();
            }
            cropper = new Cropper(cropImage, {
                aspectRatio: 1,
                viewMode: 1,
                background: false,
                zoomable: true,
                scalable: false,
            });
        };
        reader.readAsDataURL(file);
    
        
    }
    
    function closeCropModal() {
        document.getElementById("cropModal").classList.add("hidden");
        if (cropper) {
            cropper.destroy();
            cropper = null;
        }
       
    }
    
    
    function applyCrop() {
        if (cropper && uploadedImages.length < 4) {
            cropper
                .getCroppedCanvas({
                    maxWidth: 1024,
                    maxHeight: 1024,
                    fillColor: "#fff",
                })
                .toBlob(
                    (blob) => {
                        uploadedImages.push(blob);
    
    
                        const imgWrapper = document.createElement("div");
                        imgWrapper.className = "position-relative"; /*group*/
    
    
                        const imgElement = document.createElement("img");
                        imgElement.src = URL.createObjectURL(blob);
                        imgElement.className ="img-fluid w-100 ratio ratio-1x1 object-fit-cover rounded-3 border border-secondary";
                            
    
    
                        const deleteButton = document.createElement("button");
                        deleteButton.className =
                            "position-absolute top-0 end-0 bg-danger text-white rounded-circle w-25 h-25 d-flex align-items-center justify-content-center opacity-1 transition-opacity";
                        deleteButton.innerHTML = "Ã—";
                        deleteButton.onclick = (e) => {
                            e.preventDefault();
                            deleteImage(imgWrapper, blob);
                        };
    
                        imgWrapper.appendChild(imgElement);
                        imgWrapper.appendChild(deleteButton);
                        document.getElementById("imagePreview").appendChild(imgWrapper);
                    },
                    "image/jpeg",
                    0.8
                );
        }
        closeCropModal();
    }
    
    function deleteImage(imgWrapper, blob) {
        imgWrapper.remove();
        uploadedImages = uploadedImages.filter((img) => img !== blob);
        document.getElementById("fileError").classList.add("hidden");
    }
    
    
    
    document.getElementById("productForm").addEventListener("submit", async function (e) {
            e.preventDefault();
    
    
            const loadingIndicator = document.getElementById("loadingIndicator");
            loadingIndicator.classList.remove("hidden");
    
            const formData = new FormData();
    
    
            formData.append(
                "productName",
                document.getElementById("productName").value
            );
            formData.append("brand", document.getElementById("brand").value);
            formData.append("gender", document.getElementById("gender").value);
            formData.append("stock", document.getElementById("stock").value);
            formData.append("price", document.getElementById("price").value);
            formData.append("description", document.getElementById("description").value);
            formData.append("specifications", document.getElementById("specifications").value);
            formData.append("category", document.getElementById("category").value);
            formData.append("discount", document.getElementById("discount").value);
            formData.append("rating", document.getElementById("rating").value);
    
    
            uploadedImages.forEach((blob, index) => {
                formData.append("imageFiles", blob, `image_${index}.jpg`);
            });
    
            try {
                const response = await fetch("/admin/products/add", {
                    method: "POST",
                    body: formData,
                });
    
                const result = await response.json();
    
                if (response.ok) {
                    window.location.reload();
                } else {
                    throw new Error(result.error || "Error adding product");
                }
            } catch (error) {
                console.error("Error:", error);
                alert(error.message || "Error submitting form");
            } finally {
                loadingIndicator.classList.add("hidden");
            }
    
        });
    
    </script>