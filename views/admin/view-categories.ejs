<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Hello, world!</title>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link rel="stylesheet" href="/style.css">
</head>

<body class="bg-gray-900 text-white">

  <!-- Header section -->
  <%-include('../partials/admin-header')%>
    <div class="flex">
      <!-- Sidebar -->
      <%-include('../partials/admin-sidebar')%>

        <!-- Main Content -->
        <main class="flex-grow p-6">
          <div class="flex justify-between items-center mb-4">
            <h4 class="text-xl font-semibold">Categories</h4>

          </div>

          <div class="bg-gray-700 text-white rounded p-4">
            <table class="w-full border-collapse">
              <thead>
                <tr class="text-left border-b">
                  <th class="p-2">Sl. No</th>
                  <th class="p-2">Name</th>
                  <th class="p-2">Added On</th>
                  <th class="p-2">Status</th>
                  <th class="p-2">Edit</th>
                </tr>
              </thead>
              <tbody>
                <% categories.forEach((category, index)=> { %>
                  <tr class="hover:bg-gray-600">
                    <td class="p-2">
                      <%= index + 1 %>
                    </td>
                    <td class="p-2">
                      <%= category.categoryName %>
                    </td>
                    <td class="p-2">
                      <%= category.createdDate %>
                    </td>
                    <td class="p-2">
                      <%= category.status %>
                    </td>
                    <td class="p-2">
                      <button class="bg-green-500 text-white py-1 px-2 rounded hover:bg-green-600"
                        onclick="editCategoryModal('<%= category._id %>', '<%= category.categoryName %>', '<%= category.status %>')">
                        Edit
                      </button>
                      <button class="bg-red-500 text-white py-1 px-2 rounded hover:bg-red-600"
                      <%if(category.status==='Inactive'){%>hidden<%}%>
                        onclick="deleteCategory('<%= category._id %>')">
                        Remove
                      </button>
                    </td>
                  </tr>
                  <% }) %>
              </tbody>
            </table>
            <div class="mt-4 flex justify-end">
              <button class="bg-orange-500 text-white py-2 px-4 rounded hover:bg-orange-600"
                onclick="openAddCategoryModal()">
                Add New Category
              </button>
            </div>
          </div>
        </main>
    </div>

    <!-- Pagination -->
    <div class="mt-4 flex justify-center">
      <nav class="inline-flex">
        <% if (currentPage> 1) { %>
          <a href="/admin/categories?page=<%= currentPage - 1 %>"
            class="bg-[#222] text-white px-3 py-1 mx-1 rounded-md hover:bg-orange-500">Previous</a>
          <% } %>
            <% for (let i=1; i <=totalPages; i++) { %>
              <a href="/admin/categories?page=<%= i %>"
                class="<%= currentPage === i ? 'bg-orange-500' : 'bg-[#222]' %> text-white px-3 py-1 mx-1 rounded-md hover:bg-orange-500">
                <%= i %>
              </a>
              <% } %>
                <% if (currentPage < totalPages) { %>
                  <a href="/admin/categories?page=<%= currentPage + 1 %>"
                    class="bg-[#222] text-white px-3 py-1 mx-1 rounded-md hover:bg-orange-500">Next</a>
                  <% } %>
      </nav>
    </div>
    <!-- Modals -->
    <!-- Add Category Modal -->
    <div id="addCategoryModal" class="hidden fixed z-10 inset-0 flex items-center justify-center bg-black/50 ">
      <div class="bg-black p-6 rounded shadow-lg max-w-sm w-full relative">
        <!-- Close Button -->
        <button
          class="absolute top-2 right-2 text-gray-600 hover:text-gray-900 text-2xl font-bold w-8 h-8 flex items-center justify-center"
          onclick="closeAddCategoryModal()">
          &times;
        </button>
        <h2 class="text-lg font-bold mb-4">Add Category</h2>
        <form id="addCategoryForm" class="text-black" action="/admin/categories/add/" method="POST">
          <div class="mb-4">
            <label for="categoryName" class="block text-sm font-medium">Category Name</label>
            <input type="text" id="categoryName" name="categoryName" placeholder="Enter category name"
              class="border p-2 w-full rounded">
          </div>
          <div class="mb-4">
            <label for="addCategoryStatus" class="block text-sm font-medium">Status</label>
            <select name="status" id="addCategoryStatus" class="border p-2 w-full rounded text-black">
              <option value="Active">Active</option>
              <option value="Inactive">Inactive</option>
            </select>
          </div>
          <div class="text-right">
            <button type="submit" class="bg-green-500 text-white py-2 px-4 rounded hover:bg-green-600">Add
              Category</button>
          </div>
        </form>
      </div>
    </div>


    <!-- Edit Category Modal -->
    <div id="editCategoryModal" class="hidden fixed z-10 inset-0 flex items-center justify-center bg-black/50 ">
      <div class="bg-black p-6 rounded shadow-lg max-w-sm w-full relative">
        <!-- Close Button -->
        <!-- Close Button -->
        <button
          class="absolute top-2 right-2 text-gray-600 hover:text-gray-900 text-2xl font-bold w-8 h-8 flex items-center justify-center"
          onclick="closeEditCategoryModal()">
          &times;
        </button>
        <h2 class="text-lg font-bold mb-4">Edit Category</h2>
        <form id="editCategoryForm" class="text-black">
          <div class="mb-4">
            <label for="categoryName" class="block text-sm font-medium">Category Name</label>
            <input type="text" id="editCategoryName" name="categoryName" placeholder="Edit category name"
              class="border p-2 w-full rounded">
          </div>
          <div class="mb-4">
            <label for="editCategoryStatus" class="block text-sm font-medium">Status</label>
            <select name="status" id="editCategoryStatus" class="border p-2 w-full rounded text-black">
              <option value="Active">Active</option>
              <option value="Inactive">Inactive</option>
            </select>
          </div>
          <div class="text-right">
            <button type="submit" class="bg-green-500 text-white py-2 px-4 rounded hover:bg-green-600">Edit
              Category</button>
          </div>
        </form>
      </div>
    </div>

    <!-- Footer Section -->
    <%-include('../partials/admin-footer')%>

</body>

</html>

<script>




  // Validation function
  function validateCategoryForm(formData) {
    const categoryName = formData.get('categoryName').trim();

    if (!categoryName) {
      Swal.fire({
        icon: 'error',
        title: 'Validation Error',
        text: 'Category name is required.',
      });
      return false;
    }

    if (categoryName.length < 3 || categoryName.length > 50) {
      Swal.fire({
        icon: 'error',
        title: 'Validation Error',
        text: 'Category name must be between 3 and 50 characters.',
      });
      return false;
    }

    if (!/^[a-zA-Z0-9 ]+$/.test(categoryName)) {
      Swal.fire({
        icon: 'error',
        title: 'Validation Error',
        text: 'Category name can only contain letters, numbers, and spaces.',
      });
      return false;
    }
    return true;
  }
  /* Add Category *///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  /* Open Add Category */
  function openAddCategoryModal() {
    document.getElementById("addCategoryModal").classList.remove("hidden");

  }

  /* Close Add Category */
  function closeAddCategoryModal() {
    document.getElementById("addCategoryModal").classList.add("hidden");
  }

  //addCategoryForm
  document.getElementById('addCategoryForm').addEventListener('submit', async function (e) {
    e.preventDefault();
    const formData = new FormData(this);

    if (!validateCategoryForm(formData)) return;

    const jsonData = Object.fromEntries(formData.entries());

    try {
      const response = await fetch(this.action, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(jsonData),
      });
      const result = await response.json();

      if (result.success) {
        Swal.fire({
          icon: 'success',
          title: 'Success',
          text: result.message,
        }).then(() => {
          location.reload();
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: result.message || 'Error adding category',
        });
      }
    } catch (error) {
      console.error('Error:', error);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: result.message || 'An unexpected error occurred. Please try again.',
      });
    }

  });


  /* EDIT CATEGORY *////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


  /* Close Edit Category Modal */
  function closeEditCategoryModal() {
    document.getElementById("editCategoryModal").classList.add("hidden");

  }

  /* Setting Edit category modal */
  function editCategoryModal(categoryId, categoryName, status) {
    document.getElementById("editCategoryModal").classList.remove("hidden");
    document.getElementById('editCategoryName').value = categoryName;
    document.getElementById('editCategoryStatus').value = status === 'Active' ? 'Active' : 'Inactive';

    // Dynamically set the form action
    document.getElementById('editCategoryForm').action = `/admin/categories/edit/${categoryId}`;

  }


  // Edit Category Form
  document.getElementById('editCategoryForm').addEventListener('submit', async function (e) {
    e.preventDefault();
    const formData = new FormData(this);

    if (!validateCategoryForm(formData)) return;

    const jsonData = Object.fromEntries(formData.entries());

    try {
      const response = await fetch(this.action, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(jsonData),
      });
      const result = await response.json();

      if (result.success) {
        Swal.fire({
          icon: 'success',
          title: 'Success',
          text: result.message,
        }).then(() => {
          location.reload();
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: result.message || 'Error on editing category',
        });
      }
    } catch (error) {
      console.error('Error:', error);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: result.message || 'An unexpected error occurred. Please try again.',
      });
    }
  });





  ///////// Delete Category///////////////////////////////////////////////////////////////////////////////////////////////////

  function deleteCategory(categoryId) {
    Swal.fire({
      title: 'Are you sure?',
      text: "This action cannot be undone!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#f97316',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, delete it!'
    }).then(async (result) => {
      if (result.isConfirmed) {
        try {
          const response = await fetch(`/admin/categories/delete/${categoryId}`, {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json',
            },
          });
          const result = await response.json();

          if (result.success) {
            Swal.fire(
              'Deleted!',
              result.message,
              'success'
            ).then(() => {
              location.reload();
            });
          } else {
            Swal.fire(
              'Error!',
              result.message || "Error on deleting category",
              'error'
            );
          }
        } catch (error) {
          console.error('Error:', error);
          Swal.fire(
            'Error!',
            result.message || 'An unexpected error occurred.',
            'error'
          );
        }
      }
    });
  }



</script>