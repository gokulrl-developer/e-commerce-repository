<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Orders</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
</head>

<body class="bg-gray-100">

  <!-- Header Section -->
  <%- include('../partials/user-header') %>

  <!-- Main Content -->
  <div class="container my-4 p-6">
    <div class="flex">

      <!-- Sidebar -->
      <%- include('../partials/user-profile-sidebar') %>

      <main class="md:w-4/5 p-20 text-center">
        <h1 class="text-3xl font-bold text-orange-500 mb-6">Your Wishlist</h1>
        
        <div id="wishlistContent" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
            <!-- Wishlist items will be dynamically inserted here -->
        </div>
    </main>

  </div>
  </div>
          <!-- Pagination -->
<div class="my-4 flex justify-center">
    <nav class="inline-flex" id="pagination-container">
        
    </nav>
    </div> 

    <!-- Footer -->
    <%- include('../partials/user-footer') %>

</body>

</html>
<script>
   function showMessage(icon, title, text) {
            Swal.fire({
                icon: icon,
                title: title,
                text: text,
            });
        }

    async function fetchWishlist(page=1,limit=9){
        console.log(page);
        try {
            const response = await fetch(`/wishlist/data?page=${page}&limit=${limit}`, {
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            });
            const data = await response.json();
            renderWishlist(data.wishlist,data.currentPage,data.totalPages);
        } catch (err) {
            showMessage('error', 'Error', err.message||'An error occurred while fetching your wishlist.');
        }
    }

    function renderWishlist(wishlist,currentPage,totalPages) {
        const wishlistContent = document.getElementById('wishlistContent');
        if (wishlist.products.length === 0) {
            wishlistContent.innerHTML = '<p class="text-blue-400 col-span-full text-center">Your wishlist is empty.</p>';
        } else {
            wishlistContent.innerHTML = wishlist.products.map((productData) =>{
            const product=productData.product[0];
              return `<div class="card p-4 border rounded shadow-md bg-gray-400">
                <div class="w-full ">
                  <div class="w-full h-100">
                    <img src="${ product.imageUrl[0] }" class="w-full h-full object-cover rounded"
                      alt="Product Image">
                  </div>
                </div>
                <div class="mt-3 bg-white py-3 px-3">
                  <div class="flex">
                    <h6 class="text-lg font-semibold">
                      ${ product.productName }
                    </h6>
                    <a class="flex items-center justify-center w-10 h-10 bg-red-100 hover:bg-red-200 rounded-full shadow-md transition duration-300 ease-in-out ml-auto"
                      onclick="removeFromWishlist('${product._id}')">
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-red-500" viewBox="0 0 24 24"
                        fill="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                      </svg>
                    </a>
                  </div>
                  <h6 class="text-lg font-light">
                    ${ product.description.substring(0, 20) + '...' } 
                  </h6>
                  <div class="flex justify-between items-center mb-2">
                    <p class="font-bold text-xl">
                      <span class="font-bold">₹</span>
                      ${product.finalDiscountedPrice}
                    </p>
                    ${product.finalDiscountedPrice < product.price?
                      `<span class=" line-through text-sm">₹${product.price}</span>`:''
                     }
                  </div>
                  ${product.stock>0?
                    `<h6 class="text-lg font-normal">
                      ${ product.stock} Pieces Left
                    </h6>`:
                     `<h6 class="text-lg font-normal">Out of Stock</h6>`
                }
                        <a href="/product/${ product._id }"
                          class="btn bg-blue-500 text-white rounded px-2 py-1 mt-2 inline-block">View</a>
                        <a class="btn bg-blue-500 text-white rounded px-2 py-1 mt-2 inline-block" id="add-to-cart"
                          onclick="addToCart('${product._id}')">Add to Cart</a>
                </div>
              </div>`}).join('');
   }
    const paginationContainer=document.getElementById('pagination-container');
    let html=`
   ${currentPage>1?`<a onclick="fetchWishlist(${currentPage-1},9)"
        class="bg-[#222] text-white px-3 py-1 mx-1 rounded-md hover:bg-indigo-600 cursor-pointer" id="pagination-previous">Previous</a>`
        :''}`
    for (let i=1; i <=totalPages; i++) { 
    html += `<a onclick="fetchWishlist(${i},9)"
            class="${currentPage === i ? 'bg-indigo-500' : 'bg-[#222]'} text-white px-3 py-1 mx-1 rounded-md hover:bg-indigo-600 cursor-pointer"
            id="pagination-current">
            ${i}
          </a>`
         }
         html+= `${currentPage<totalPages?
             `<a onclick="fetchWishlist(${currentPage+1},9)"
                class="bg-[#222] text-white px-3 py-1 mx-1 rounded-md hover:bg-indigo-600 cursor-pointer"
                id="pagination-next">Next</a>`:''
                }`

        paginationContainer.innerHTML=html;
    }

 async function addToCart(productId) {
     try {
            const response = await fetch('/cart/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({ productId, quantity: 1 })
            });

            const result = await response.json();
            if (response.ok) {
                showMessage('success', 'Success', result.message);
            } else {
                showMessage('error', 'Error', result.message);
            }
        } catch (err) {
            showMessage('error', 'Error', 'An error occurred. Please try again later.');
        }
    }

    async function removeFromWishlist(productId) {
        try {
            const response = await fetch('/wishlist/remove', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({ productId })
            });
            if (response.ok) {
                const result = await response.json();
             const userConfirmation=await Swal.fire({icon:'success',title:'Removed',text:result.message,showConfirmButton:true,confirmationText:'OK'});
            if(userConfirmation.isConfirmed){
               fetchWishlist();
            }
            } else {
                const result = await response.json();
                showMessage('error', 'Error', result.message);
            }
        } catch (err) {
            showMessage('error', 'Error','An error occurred. Please try again later.');
        }
    }
/* 
    function updateCartCount(count) {
        const cartCountElement = document.getElementById('cart-count');
        if (cartCountElement) {
            cartCountElement.textContent = count;
            cartCountElement.classList.toggle('hidden', count === 0);
        }
    }
 */
    // Fetch and render wishlist on page load
    document.addEventListener('DOMContentLoaded', fetchWishlist(1,9));
    
   /*  document.addEventListener('DOMContentLoaded', () => {
        const userIcon = document.getElementById('user-icon');
        const userDropdown = document.getElementById('user-dropdown');

        userIcon.addEventListener('click', () => {
            userDropdown.classList.toggle('hidden');
        });

        document.addEventListener('click', (e) => {
            if (!userIcon.contains(e.target) && !userDropdown.contains(e.target)) {
                userDropdown.classList.add('hidden');
            }
        });
    }); */
</script>