<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Cart</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.9/dist/sweetalert2.all.min.js"></script>

</head>

<body class="bg-gray-50">

  <!-- Header Section -->
  <%- include('../partials/user-header') %>

    <!-- Main Content -->
    <main class="container mx-auto px-4 py-8">
      <h2 class="text-lg font-bold mb-4">My Cart</h2>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        <!-- Cart Table -->
        <section class="col-span-2">
          <div class="overflow-x-auto bg-blue-100 rounded-lg shadow-md p-4" id="cartContent">
            <%if(!cartItems || cartItems.length===0){%>
              <p class="text-gray-400">Your cart is empty.</p>
              <%}else if(cartItems && cartItems.length>0){%>
                <table class="w-full border-collapse">
                  <thead class="bg-blue-500 text-white rounded-t-lg">
                    <tr>
                      <th class="p-4 text-left font-semibold">Product</th>
                      <th class="p-4 font-semibold">Price</th>
                      <th class="p-4 font-semibold">Quantity</th>
                      <th class="p-4 font-semibold">Total</th>
                      <th class="p-4 font-semibold">Price <br>After<br>Offer</th>
                      <th class="p-4 font-semibold">Offer<br>Applied</th>

                    </tr>
                  </thead>
                  <tbody>
                    <!-- Product Rows -->
                    <%cartItems.forEach((item)=>{%>

                      <tr class="border-b border-gray-200" data-cart-item-id="<%= item._id %>">
                        <td class="p-4 flex space-x-4 items-start">
                          <img src=<%=item.product.imageUrl[0]%> alt="Product" class="w-20 h-20 rounded-md">
                          <div>
                            <h3 class="font-semibold text-gray-800">
                              <%=item.product.productName%>
                            </h3>
                            <a href="#" class="text-sm text-red-500 hover:underline"
                              onclick="removeFromCart('<%= item._id %>')">Remove</a>
                          </div>
                        </td>
                        <td class="p-4 text-center text-gray-800" data-cart-item-price-id="<%=item._id%>">
                          <%=item.price%>
                        </td>
                        <td class="p-4 text-center">
                          <div class="flex justify-center items-center space-x-2">
                            <button class="w-8 h-8 bg-gray-200 text-gray-600 font-bold rounded"
                              onclick="updateQuantity('<%= item._id %>', -1)">-</button>
                            <span class="text-gray-800 font-medium" data-cart-item-quantity-id="<%=item._id%>">
                              <%=item.quantity%>
                            </span>
                            <button class="w-8 h-8 bg-gray-200 text-gray-600 font-bold rounded"
                              onclick="updateQuantity('<%= item._id %>', 1)">+</button>
                          </div>
                        </td>
                        <td class="p-4 text-center text-gray-800 font-semibold"
                          data-cart-item-original-total-price-id="<%=item._id%>">
                          <%=item.originalTotalPrice%>
                        </td>
                        <td class="p-4 text-center text-gray-800 font-semibold"
                          data-cart-item-total-price-after-offer-id="<%=item._id%>">
                          <%=item.totalPriceAfterOffer%>
                        </td>
                        <td class="p-4 text-center text-gray-800 font-semibold"
                          data-cart-item-applied-offer-amount-id="<%=item._id%>">
                          <%=item.appliedOfferAmount%>
                        </td>
                      </tr>
                      <%})}%>

                  </tbody>
                </table>
          </div>
        </section>


        <!-- Order Summary -->
        <section class="col-span-1" id="cart-summary">
          <div class="p-6 border rounded-lg shadow bg-gray-50">
            <h3 class="text-lg font-medium mb-4 text-gray-800">Order Summary</h3>
            <div class="space-y-2">
              <div class="flex justify-between text-gray-700">
                <span>Total Price</span>
                <span id="totalPrice">
                  <%=totalPrice%>
                </span>
              </div>
              <div class="flex justify-between text-gray-800 font-semibold text-lg <%=!appliedCouponCode?'hidden':''%>" id="coupon-discount-line">
                <span>Coupon Discount</span>
                <span id="coupon-discount">
                  <%=couponDiscount%>
                </span>
              </div>
              <div class="flex justify-between text-gray-700">
                <span>Discount</span>
                <span id="discount">
                  <%=totalDiscount%>
                </span>
              </div>
              <div class="flex justify-between text-gray-700">
                <span>Final Price</span>
                <span id="finalPrice">
                  <%=grandTotal%>
                </span>
              </div>
              <div class="flex justify-between text-gray-700">
                <span>Shipping</span>
                <span>Free</span>
              </div>
              <hr class="my-2 border-gray-300">
              <div class="flex justify-between text-gray-800 font-semibold text-lg">
                <span>Grand Total</span>
                <span id="grandTotal">
                  <%=grandTotal%>
                </span>
              </div>
            </div>
            <hr class="my-4 border-gray-300">
            <div class="relative">
              <label for="coupon" class="sr-only">Coupon Code</label>
              <div class="flex items-center border border-gray-300 rounded px-2 py-1 bg-white">
                <span class="text-gray-500">üéüÔ∏è</span>
                <select id="coupon" class="flex-1 ml-2 bg-transparent outline-none text-gray-700"
                  onchange="toggleCoupon('apply')">
                  <option value="" disabled selected>Coupons Available</option>
                  <%if(applicableCoupons && applicableCoupons.length>0){applicableCoupons.forEach((coupon)=>{%>
                    <option value="<%=coupon.code%>" <%=coupon.code===appliedCouponCode?"selected" :""%>
                      >
                      <%=coupon.code%>
                    </option>
                    <%})}%>
                </select>
              </div>
            </div>
            <button
              class="w-full mt-4 bg-black text-white py-3 rounded text-center font-bold text-sm hover:bg-gray-800 
              <%=!appliedCouponCode?'hidden':''%>"
              onclick="toggleCoupon('remove')" id="remove-coupon-btn">
              Romove Coupon
            </button>
            <button class="w-full mt-4 bg-black text-white py-3 rounded text-center font-bold text-sm hover:bg-gray-800"
              onclick="proceedToCheckout()">
              CHECKOUT
            </button>
          </div>
        </section>


      </div>
    </main>

    <!-- Footer -->
    <%- include('../partials/user-footer') %>

</body>

</html>
<script>
  async function toggleCoupon(mode) {
    const couponSelect = document.getElementById('coupon');
    const couponCode = couponSelect.value;
    const action = mode === 'apply' ? '/apply-coupon' : '/remove-coupon'
    try {
      const response = await fetch(action, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ couponCode })
      });

      const result = await response.json();
      if (response.ok) {
        swal.fire("Success", result.message || 'Coupon applied Successfully', "success");
        document.getElementById('totalPrice').textContent = (result.totalPrice || 0);
        document.getElementById('coupon-discount').textContent = (result.couponDiscount || 0);
        const totalDiscountElement = document.querySelector('#discount');
        if (totalDiscountElement) {
          totalDiscountElement.textContent = (result.totalDiscount || 0);
        }

        if (mode === 'apply') {
          const selectCoupon = document.getElementById('coupon');
          selectCoupon.querySelector('[value=""]').selected = true;
          document.getElementById('remove-coupon-btn').classList.remove('hidden');
          document.getElementById('coupon-discount-line').classList.remove('hidden');
          console.log("kfdshl")
        }else{
          document.getElementById('remove-coupon-btn').classList.add('hidden');
          console.log("kfdshl")

          document.getElementById('coupon-discount-line').classList.add('hidden');
          console.log("kfdshl")
        }
      } else {
        swal.fire("Error", result.message || 'Error applying coupon', "error");
      }
    } catch (error) {
      const message=mode==='apply'?"An error occured while applying the coupon":"an error occured while removing the coupon";
      swal.fire("Error", error.message || message, "error");
    }
  }

  async function fetchCart() {
    console.log('jdkslf')
    try {
      const response = await fetch('/cart', {
        headers: {
          'X-Requested-With': 'XMLHttpRequest'
        }
      });
      const data = await response.json();
      console.log(data)
      if(response.ok){
      if (data.cartItems.length === 0) {
        window.location.reload();
      } else {
        renderCart(data);
      }
    }
    } catch (err) {
      Swal.fire("Error", err.message || "Error fetch cart", "error")
    }
  }

  function renderCart(data) {
    const cartContent = document.getElementById('cartContent');
    if (data.cartItems.length === 0) {
      cartContent.innerHTML = '<p class="text-gray-400">Your cart is empty.</p>';
    } else {
      let html = `
                 <table class="w-full border-collapse">              
              <thead class="bg-blue-500 text-white rounded-t-lg" >                
                <tr>
                  <th class="p-4 text-left font-semibold">Product</th>
                  <th class="p-4 font-semibold">Price</th>
                  <th class="p-4 font-semibold">Quantity</th>
                  <th class="p-4 font-semibold">Total</th>
                  <th class="p-4 font-semibold">Price <br>After<br>Offer</th>
                  <th class="p-4 font-semibold">Offer<br>Applied</th>
                </tr>
              </thead>
              <tbody >
                `;

      data.cartItems.forEach(item => {
        html += `
                     <tr class="border-b border-gray-200" data-cart-item-id="${item._id}">
                      <td class="p-4 flex space-x-4 items-start">
                        <img src=${item.product.imageUrl[0]} alt="Product" class="w-20 h-20 rounded-md">
                        <div>
                          <h3 class="font-semibold text-gray-800">
                            ${item.product.productName}
                          </h3>
                          <a href="#" class="text-sm text-red-500 hover:underline"
                            onclick="removeFromCart('${item._id}')">Remove</a>
                        </div>
                      </td>
                      <td class="p-4 text-center text-gray-800" data-cart-item-price-id=${item._id}>
                        ${item.price}
                      </td>
                      <td class="p-4 text-center">
                        <div class="flex justify-center items-center space-x-2">
                          <button class="w-8 h-8 bg-gray-200 text-gray-600 font-bold rounded"
                            onclick="updateQuantity('${item._id}', -1)">-</button>
                          <span class="text-gray-800 font-medium" data-cart-item-quantity-id=${item._id}>
                            ${item.quantity}
                          </span>
                          <button class="w-8 h-8 bg-gray-200 text-gray-600 font-bold rounded"
                            onclick="updateQuantity('${item._id}', 1)">+</button>
                        </div>
                      </td>
                      <td class="p-4 text-center text-gray-800 font-semibold"
                        data-cart-item-original-total-price-id='${item._id}'>
                        ${item.originalTotalPrice}
                      </td>
                      <td class="p-4 text-center text-gray-800 font-semibold"
                        data-cart-item-total-price-after-offer-id='${item._id}'>
                        ${item.totalPriceAfterOffer}
                      </td>
                      <td class="p-4 text-center text-gray-800 font-semibold"
                        data-cart-item-applied-offer-amount-id='${item._id}'>
                        ${item.appliedOfferAmount}
                      </td>
                  </tr>
                `;
      });

      html += `</tbody>`


      cartContent.innerHTML = html;
    }
    //Update cart summary
    html = `
            const cartSummary=document.getElementById('cart-summary');
            <div class="p-6 border rounded-lg shadow bg-gray-50">
            <h3 class="text-lg font-medium mb-4 text-gray-800">Order Summary</h3>
            <div class="space-y-2">
              <div class="flex justify-between text-gray-700">
                <span>Total Price</span>
                <span id="totalPrice">
                  ${data.totalPrice}
                </span>
              </div>
              <div class="flex justify-between text-gray-700">
                <span>Discount</span>
                <span id="discount">
                  ${data.totalDiscount}
                </span>
              </div>
              <div class="flex justify-between text-gray-700">
                <span>Final Price</span>
                <span id="finalPrice">
                  ${data.grandTotal}
                </span>
              </div>
              <div class="flex justify-between text-gray-700">
                <span>Shipping</span>
                <span>Free</span>
              </div>
              <hr class="my-2 border-gray-300">
              <div class="flex justify-between text-gray-800 font-semibold text-lg">
                <span>Grand Total</span>
                <span id="grandTotal">
                  ${data.grandTotal}
                </span>
              </div>
            </div>
            <hr class="my-4 border-gray-300">
            <div class="relative">
              <label for="coupon" class="sr-only">Coupon Code</label>
              <div class="flex items-center border border-gray-300 rounded px-2 py-1 bg-white">
                <span class="text-gray-500">üéüÔ∏è</span>
                <select id="coupon" class="flex-1 ml-2 bg-transparent outline-none text-gray-700"
                onchange="toggleCoupon('apply')">
                  <option value="" disabled selected>Coupons Available</option>`

    if (data.applicableCoupons && data.applicableCoupons.length > 0) {
      data.applicableCoupons.forEach((coupon) => {
        html += `      
                  <option value="coupon._id">${coupon.code}</option>`
      })
    }
    html += `
                </select>
              </div>
            </div>
            <div class="flex justify-between text-gray-800 font-semibold text-lg hidden" id="coupon-discount-line">
              <span>Coupon Discount</span>
              <span id="coupon-discount">
                ${data.couponDiscount}
              </span>
            </div>
            <button
              class="w-full mt-4 bg-black text-white py-3 rounded text-center font-bold text-sm hover:bg-gray-800 hidden"
              onclick="toggleCoupon('remove')" id="remove-coupon-btn">
              Romove Coupon
            </button>
            <button
              class="w-full mt-4 bg-black text-white py-3 rounded text-center font-bold text-sm hover:bg-gray-800"
              onclick="proceedToCheckout()">
              CHECKOUT
            </button>
          </div>`
    document.getElementById('cart-summary').innerHTML = html;
/*             document.dispatchEvent(new CustomEvent('cartUpdated', { detail: { count: data.cart.length } }));
 */        }


  async function removeFromCart(cartItemId) {
    // Show SweetAlert confirmation dialog
    const result = await Swal.fire({
      title: "Are you sure?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Remove From Cart!",
    });

    if (result.isConfirmed) {
      try {
        const response = await axios.delete(`/cart/${cartItemId}`);
        if (response.status === 200) {
          await Swal.fire({
            title: "Success!",
            text: response.data.message || "Item removed from cart",
            icon: "success",
            confirmButtonText: "OK",
          })
          fetchCart();
        } else {

          throw new Error(response.data.message || "Failed to remove Item from cart")
        }
      } catch (error) {
        console.error("Error removing item from cart:", error);
        await Swal.fire({
          title: "Error",
          text: error.message || "Failed to delete item.try again later",
          icon: "error",
          confirmButtonText: "OK",
        });
      }
    }
  }


  async function updateQuantity(cartItemId, delta) {
    try {
      const cartItemElement = document.querySelector(`[data-cart-item-id="${cartItemId}"]`);
      const quantityElement =
        cartItemElement.querySelector(`[data-cart-item-quantity-id="${cartItemId}"]`);
      const currentQuantity = parseInt(quantityElement.textContent);
      const newQuantity = currentQuantity + parseInt(delta);

      if (newQuantity < 1) {
        swal.fire("Warning", "Quantity must be at least 1", "warning");
        return;
      } else if (newQuantity > 5) {
        swal.fire("Warning", "Maximum quantity of 5 is allowed", "warning");
        return;
      }

      // Send the updated quantity to the server
      const response = await axios.put('/cart/update', {
        quantity: newQuantity,
        cartItemId: cartItemId,
      });
      if (response.status === 200) {
        await Swal.fire({
          title: "Success",
          text: response.data.message || "Cart updated Successfully",
          icon: "success",
          confirmButtonText: "OK"
        })
        fetchCart();
      } else {
        throw new Error(response.data.message || "Error updating cart quantity.try again later")
        console.error("Failed to update cart:", response.data.message);
      }
    } catch (error) {
      await Swal.fire({
        title: "Error",
        text: error.message || "Error updating cart quantity.try again later",
        icon: "error",
        confirmButtonText: "OK"
      })

      console.error("Error updating cart:", error);
    }
  }

  function proceedToCheckout() {
    window.location.href = '/checkout';
  }

</script>